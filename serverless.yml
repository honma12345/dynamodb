service: dynamodb-api
frameworkVersion: ^2.10.0
useDotenv: true
provider:
  name: aws
  endpointType: REGIONAL
  runtime: nodejs14.x
  stage: ${opt:stage, self:custom.defaultStage}
  region: ap-northeast-1
  stackName: ${self:custom.prefix}-stack
  iam:
    role:
      statements: ${file(config/iam.yml)}
  logRetentionInDays: 90
  tracing:
    apiGateway: true
    lambda: true
  versionFunctions: false
  timeout: 30
  architecture: arm64

plugins:
  - serverless-dynamodb-local
  - serverless-plugin-typescript
  - serverless-plugin-optimize
  - serverless-prune-plugin
  - serverless-offline
  - serverless-pseudo-parameters
  - serverless-plugin-tracing

package:
  individually: true

custom:
  dynamodb:
    start:
      port: 8000
  defaultStage: local
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:custom.stage}-${self:service}
  accountId:
    Ref: AWS::AccountId
  # profiles:
  #   local: dev
  app:
    environment:
      local: ${file(config/env/local.yml)}
      dev: ${file(config/env/dev.yml)}
functions:
  index:
    handler: src/index.handler
    environment: ${self:custom.app.environment.${self:provider.stage}}
    memorySize: 1024
    events:
      - http:
          cors:
            origin: '*'
            headers:
              - content-type
          path: '/'
          method: any
      - http:
          cors:
            origin: '*'
            headers:
              - content-type
          path: '/{proxy+}'
          method: any
